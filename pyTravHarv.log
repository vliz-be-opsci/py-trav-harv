2024-01-30 21:57:20 @SubjPropPathAssetion.py  [INFO  ] template_folder == C:\Users\cedric\Documents\GitHub\pyTravHarv\pyTravHarv\pysubyt_templates
2024-01-30 21:57:20 @__main__.py              [DEBUG ] Namespace(verbose=False, config_folder='./tests/config/', name='base_test.yml', output_folder='C:\\Users\\cedric\\Documents\\GitHub\\pyTravHarv\\output', target_store='./tests/inputs/63523.ttl')
2024-01-30 21:57:20 @TravHarvConfigBuilder.py [DEBUG ] Config builder initialized
2024-01-30 21:57:20 @TargetStore.py           [DEBUG ] MemoryTargetStore: ./tests/inputs/63523.ttl
2024-01-30 21:57:20 @TargetStore.py           [DEBUG ] MemoryTargetStore initialized
2024-01-30 21:57:20 @TargetStore.py           [DEBUG ] graph: [a rdfg:Graph;rdflib:storage [a rdflib:Store;rdfs:label 'Memory']].
2024-01-30 21:57:20 @TargetStore.py           [DEBUG ] Ammount of triples in graph: 1
2024-01-30 21:57:20 @__main__.py              [INFO  ] Config object: {'base_test.yml': {'prefix_set': <TravHarvConfigBuilder.PrefixSet object at 0x0000019316CB1F10>, 'tasks': [<TravHarvConfigBuilder.TravHarvTask object at 0x0000019313E8A510>, <TravHarvConfigBuilder.TravHarvTask object at 0x0000019313EBB850>, <TravHarvConfigBuilder.TravHarvTask object at 0x0000019316D53150>]}}
2024-01-30 21:57:20 @__main__.py              [INFO  ] Config file: base_test.yml
2024-01-30 21:57:20 @__main__.py              [INFO  ] Config: {'prefix_set': <TravHarvConfigBuilder.PrefixSet object at 0x0000019316CB1F10>, 'tasks': [<TravHarvConfigBuilder.TravHarvTask object at 0x0000019313E8A510>, <TravHarvConfigBuilder.TravHarvTask object at 0x0000019313EBB850>, <TravHarvConfigBuilder.TravHarvTask object at 0x0000019316D53150>]}
2024-01-30 21:57:20 @TravHarvExecuter.py      [DEBUG ] TravHarvExecutor initialized
2024-01-30 21:57:20 @TravHarvExecuter.py      [DEBUG ] Config filename: base_test.yml
2024-01-30 21:57:20 @TravHarvExecuter.py      [DEBUG ] Prefix set: <TravHarvConfigBuilder.PrefixSet object at 0x0000019316CB1F10>
2024-01-30 21:57:20 @TravHarvExecuter.py      [DEBUG ] Tasks: [<TravHarvConfigBuilder.TravHarvTask object at 0x0000019313E8A510>, <TravHarvConfigBuilder.TravHarvTask object at 0x0000019313EBB850>, <TravHarvConfigBuilder.TravHarvTask object at 0x0000019316D53150>]
2024-01-30 21:57:20 @TravHarvExecuter.py      [DEBUG ] Asserting all paths for all subjects given for each task per config
2024-01-30 21:57:20 @TravHarvExecuter.py      [DEBUG ] Task: <TravHarvConfigBuilder.TravHarvTask object at 0x0000019313E8A510>
2024-01-30 21:57:20 @TravHarvExecuter.py      [DEBUG ] Info task: {'subject_definition': <TravHarvConfigBuilder.SubjectDefinition object at 0x0000019316C7B090>, 'assert_path_set': <TravHarvConfigBuilder.AssertPathSet object at 0x00000193135B55D0>}
2024-01-30 21:57:20 @TravHarvExecuter.py      [DEBUG ] Defining subjects to assert paths for
2024-01-30 21:57:20 @TravHarvExecuter.py      [DEBUG ] LiteralSubjectDefinition
2024-01-30 21:57:20 @TravHarvExecuter.py      [DEBUG ] Subject: http://marineregions.org/mrgid/63523
2024-01-30 21:57:20 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject
2024-01-30 21:57:20 @SubjPropPathAssetion.py  [DEBUG ] Subject: http://marineregions.org/mrgid/63523
2024-01-30 21:57:20 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject at a given depth
2024-01-30 21:57:20 @SubjPropPathAssetion.py  [DEBUG ] Depth: 1
2024-01-30 21:57:20 @SubjPropPathAssetion.py  [DEBUG ] assertion_path: mr:hasGeometry
2024-01-30 21:57:20 @syntax_builder.py        [DEBUG ] building sparql query 'trajectory.sparql' with variables={'subject': 'http://marineregions.org/mrgid/63523', 'property_trajectory': 'mr:hasGeometry', 'prefixes': {'ex': '<https://example.org/whatever/>', 'mr': '<http://marineregions.org/ns/ontology#>'}}
2024-01-30 21:57:20 @SubjPropPathAssetion.py  [DEBUG ] SPARQL query: 


PREFIX ex: <https://example.org/whatever/>

PREFIX mr: <http://marineregions.org/ns/ontology#>


SELECT ?o
WHERE {
        <http://marineregions.org/mrgid/63523> mr:hasGeometry ?o .
    }
2024-01-30 21:57:21 @connectionpool.py        [DEBUG ] Starting new HTTP connection (1): marineregions.org:80
2024-01-30 21:57:22 @connectionpool.py        [DEBUG ] http://marineregions.org:80 "GET /mrgid/63523 HTTP/1.1" 301 245
2024-01-30 21:57:22 @connectionpool.py        [DEBUG ] Starting new HTTPS connection (1): marineregions.org:443
2024-01-30 21:57:22 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/63523 HTTP/1.1" 302 0
2024-01-30 21:57:22 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/63523.ttl HTTP/1.1" 200 1076
2024-01-30 21:57:22 @WebAccess.py             [INFO  ] content of http://marineregions.org/mrgid/63523 added to the store
2024-01-30 21:57:22 @SubjPropPathAssetion.py  [DEBUG ] Increasing the depth of the property path assertion
2024-01-30 21:57:22 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject
2024-01-30 21:57:22 @SubjPropPathAssetion.py  [DEBUG ] Subject: http://marineregions.org/mrgid/63523
2024-01-30 21:57:22 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject at a given depth
2024-01-30 21:57:22 @SubjPropPathAssetion.py  [DEBUG ] Depth: 1
2024-01-30 21:57:22 @SubjPropPathAssetion.py  [DEBUG ] assertion_path: mr:isPartOf
2024-01-30 21:57:22 @syntax_builder.py        [DEBUG ] building sparql query 'trajectory.sparql' with variables={'subject': 'http://marineregions.org/mrgid/63523', 'property_trajectory': 'mr:isPartOf', 'prefixes': {'ex': '<https://example.org/whatever/>', 'mr': '<http://marineregions.org/ns/ontology#>'}}
2024-01-30 21:57:22 @SubjPropPathAssetion.py  [DEBUG ] SPARQL query: 


PREFIX ex: <https://example.org/whatever/>

PREFIX mr: <http://marineregions.org/ns/ontology#>


SELECT ?o
WHERE {
        <http://marineregions.org/mrgid/63523> mr:isPartOf ?o .
    }
2024-01-30 21:57:22 @SubjPropPathAssetion.py  [DEBUG ] Harvesting the property path and backtracking to the previous depth
2024-01-30 21:57:22 @SubjPropPathAssetion.py  [DEBUG ] Increasing the depth of the property path assertion
2024-01-30 21:57:22 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject
2024-01-30 21:57:22 @SubjPropPathAssetion.py  [DEBUG ] Subject: http://marineregions.org/mrgid/63523
2024-01-30 21:57:22 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject at a given depth
2024-01-30 21:57:22 @SubjPropPathAssetion.py  [DEBUG ] Depth: 3
2024-01-30 21:57:22 @SubjPropPathAssetion.py  [DEBUG ] assertion_path: mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude>
2024-01-30 21:57:22 @syntax_builder.py        [DEBUG ] building sparql query 'trajectory.sparql' with variables={'subject': 'http://marineregions.org/mrgid/63523', 'property_trajectory': 'mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude>', 'prefixes': {'ex': '<https://example.org/whatever/>', 'mr': '<http://marineregions.org/ns/ontology#>'}}
2024-01-30 21:57:22 @SubjPropPathAssetion.py  [DEBUG ] SPARQL query: 


PREFIX ex: <https://example.org/whatever/>

PREFIX mr: <http://marineregions.org/ns/ontology#>


SELECT ?o
WHERE {
        <http://marineregions.org/mrgid/63523> mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude> ?o .
    }
2024-01-30 21:57:23 @connectionpool.py        [DEBUG ] Starting new HTTP connection (1): marineregions.org:80
2024-01-30 21:57:23 @connectionpool.py        [DEBUG ] http://marineregions.org:80 "GET /mrgid/63523 HTTP/1.1" 301 245
2024-01-30 21:57:23 @connectionpool.py        [DEBUG ] Starting new HTTPS connection (1): marineregions.org:443
2024-01-30 21:57:23 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/63523 HTTP/1.1" 302 0
2024-01-30 21:57:23 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/63523.ttl HTTP/1.1" 200 1076
2024-01-30 21:57:23 @WebAccess.py             [INFO  ] content of http://marineregions.org/mrgid/63523 added to the store
2024-01-30 21:57:23 @SubjPropPathAssetion.py  [DEBUG ] Increasing the depth of the property path assertion
2024-01-30 21:57:23 @TravHarvExecuter.py      [DEBUG ] Subject: http://marineregions.org/mrgid/2540
2024-01-30 21:57:23 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject
2024-01-30 21:57:23 @SubjPropPathAssetion.py  [DEBUG ] Subject: http://marineregions.org/mrgid/2540
2024-01-30 21:57:23 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject at a given depth
2024-01-30 21:57:23 @SubjPropPathAssetion.py  [DEBUG ] Depth: 1
2024-01-30 21:57:23 @SubjPropPathAssetion.py  [DEBUG ] assertion_path: mr:hasGeometry
2024-01-30 21:57:23 @syntax_builder.py        [DEBUG ] building sparql query 'trajectory.sparql' with variables={'subject': 'http://marineregions.org/mrgid/2540', 'property_trajectory': 'mr:hasGeometry', 'prefixes': {'ex': '<https://example.org/whatever/>', 'mr': '<http://marineregions.org/ns/ontology#>'}}
2024-01-30 21:57:23 @SubjPropPathAssetion.py  [DEBUG ] SPARQL query: 


PREFIX ex: <https://example.org/whatever/>

PREFIX mr: <http://marineregions.org/ns/ontology#>


SELECT ?o
WHERE {
        <http://marineregions.org/mrgid/2540> mr:hasGeometry ?o .
    }
2024-01-30 21:57:24 @connectionpool.py        [DEBUG ] Starting new HTTP connection (1): marineregions.org:80
2024-01-30 21:57:24 @connectionpool.py        [DEBUG ] http://marineregions.org:80 "GET /mrgid/2540 HTTP/1.1" 301 244
2024-01-30 21:57:24 @connectionpool.py        [DEBUG ] Starting new HTTPS connection (1): marineregions.org:443
2024-01-30 21:57:24 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/2540 HTTP/1.1" 302 0
2024-01-30 21:57:24 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/2540.ttl HTTP/1.1" 200 1039
2024-01-30 21:57:24 @WebAccess.py             [INFO  ] content of http://marineregions.org/mrgid/2540 added to the store
2024-01-30 21:57:24 @SubjPropPathAssetion.py  [DEBUG ] Increasing the depth of the property path assertion
2024-01-30 21:57:24 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject
2024-01-30 21:57:24 @SubjPropPathAssetion.py  [DEBUG ] Subject: http://marineregions.org/mrgid/2540
2024-01-30 21:57:24 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject at a given depth
2024-01-30 21:57:24 @SubjPropPathAssetion.py  [DEBUG ] Depth: 1
2024-01-30 21:57:24 @SubjPropPathAssetion.py  [DEBUG ] assertion_path: mr:isPartOf
2024-01-30 21:57:24 @syntax_builder.py        [DEBUG ] building sparql query 'trajectory.sparql' with variables={'subject': 'http://marineregions.org/mrgid/2540', 'property_trajectory': 'mr:isPartOf', 'prefixes': {'ex': '<https://example.org/whatever/>', 'mr': '<http://marineregions.org/ns/ontology#>'}}
2024-01-30 21:57:24 @SubjPropPathAssetion.py  [DEBUG ] SPARQL query: 


PREFIX ex: <https://example.org/whatever/>

PREFIX mr: <http://marineregions.org/ns/ontology#>


SELECT ?o
WHERE {
        <http://marineregions.org/mrgid/2540> mr:isPartOf ?o .
    }
2024-01-30 21:57:24 @SubjPropPathAssetion.py  [DEBUG ] Harvesting the property path and backtracking to the previous depth
2024-01-30 21:57:24 @SubjPropPathAssetion.py  [DEBUG ] Increasing the depth of the property path assertion
2024-01-30 21:57:24 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject
2024-01-30 21:57:24 @SubjPropPathAssetion.py  [DEBUG ] Subject: http://marineregions.org/mrgid/2540
2024-01-30 21:57:24 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject at a given depth
2024-01-30 21:57:24 @SubjPropPathAssetion.py  [DEBUG ] Depth: 3
2024-01-30 21:57:24 @SubjPropPathAssetion.py  [DEBUG ] assertion_path: mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude>
2024-01-30 21:57:24 @syntax_builder.py        [DEBUG ] building sparql query 'trajectory.sparql' with variables={'subject': 'http://marineregions.org/mrgid/2540', 'property_trajectory': 'mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude>', 'prefixes': {'ex': '<https://example.org/whatever/>', 'mr': '<http://marineregions.org/ns/ontology#>'}}
2024-01-30 21:57:24 @SubjPropPathAssetion.py  [DEBUG ] SPARQL query: 


PREFIX ex: <https://example.org/whatever/>

PREFIX mr: <http://marineregions.org/ns/ontology#>


SELECT ?o
WHERE {
        <http://marineregions.org/mrgid/2540> mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude> ?o .
    }
2024-01-30 21:57:25 @connectionpool.py        [DEBUG ] Starting new HTTP connection (1): marineregions.org:80
2024-01-30 21:57:25 @connectionpool.py        [DEBUG ] http://marineregions.org:80 "GET /mrgid/2540 HTTP/1.1" 301 244
2024-01-30 21:57:25 @connectionpool.py        [DEBUG ] Starting new HTTPS connection (1): marineregions.org:443
2024-01-30 21:57:25 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/2540 HTTP/1.1" 302 0
2024-01-30 21:57:25 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/2540.ttl HTTP/1.1" 200 1039
2024-01-30 21:57:25 @WebAccess.py             [INFO  ] content of http://marineregions.org/mrgid/2540 added to the store
2024-01-30 21:57:25 @SubjPropPathAssetion.py  [DEBUG ] Increasing the depth of the property path assertion
2024-01-30 21:57:25 @TravHarvExecuter.py      [DEBUG ] Subject: http://marineregions.org/mrgid/12548
2024-01-30 21:57:25 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject
2024-01-30 21:57:25 @SubjPropPathAssetion.py  [DEBUG ] Subject: http://marineregions.org/mrgid/12548
2024-01-30 21:57:25 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject at a given depth
2024-01-30 21:57:25 @SubjPropPathAssetion.py  [DEBUG ] Depth: 1
2024-01-30 21:57:25 @SubjPropPathAssetion.py  [DEBUG ] assertion_path: mr:hasGeometry
2024-01-30 21:57:25 @syntax_builder.py        [DEBUG ] building sparql query 'trajectory.sparql' with variables={'subject': 'http://marineregions.org/mrgid/12548', 'property_trajectory': 'mr:hasGeometry', 'prefixes': {'ex': '<https://example.org/whatever/>', 'mr': '<http://marineregions.org/ns/ontology#>'}}
2024-01-30 21:57:25 @SubjPropPathAssetion.py  [DEBUG ] SPARQL query: 


PREFIX ex: <https://example.org/whatever/>

PREFIX mr: <http://marineregions.org/ns/ontology#>


SELECT ?o
WHERE {
        <http://marineregions.org/mrgid/12548> mr:hasGeometry ?o .
    }
2024-01-30 21:57:26 @connectionpool.py        [DEBUG ] Starting new HTTP connection (1): marineregions.org:80
2024-01-30 21:57:26 @connectionpool.py        [DEBUG ] http://marineregions.org:80 "GET /mrgid/12548 HTTP/1.1" 301 245
2024-01-30 21:57:26 @connectionpool.py        [DEBUG ] Starting new HTTPS connection (1): marineregions.org:443
2024-01-30 21:57:26 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/12548 HTTP/1.1" 302 0
2024-01-30 21:57:26 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/12548.ttl HTTP/1.1" 200 1378
2024-01-30 21:57:26 @WebAccess.py             [INFO  ] content of http://marineregions.org/mrgid/12548 added to the store
2024-01-30 21:57:26 @SubjPropPathAssetion.py  [DEBUG ] Increasing the depth of the property path assertion
2024-01-30 21:57:26 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject
2024-01-30 21:57:26 @SubjPropPathAssetion.py  [DEBUG ] Subject: http://marineregions.org/mrgid/12548
2024-01-30 21:57:26 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject at a given depth
2024-01-30 21:57:26 @SubjPropPathAssetion.py  [DEBUG ] Depth: 1
2024-01-30 21:57:26 @SubjPropPathAssetion.py  [DEBUG ] assertion_path: mr:isPartOf
2024-01-30 21:57:26 @syntax_builder.py        [DEBUG ] building sparql query 'trajectory.sparql' with variables={'subject': 'http://marineregions.org/mrgid/12548', 'property_trajectory': 'mr:isPartOf', 'prefixes': {'ex': '<https://example.org/whatever/>', 'mr': '<http://marineregions.org/ns/ontology#>'}}
2024-01-30 21:57:26 @SubjPropPathAssetion.py  [DEBUG ] SPARQL query: 


PREFIX ex: <https://example.org/whatever/>

PREFIX mr: <http://marineregions.org/ns/ontology#>


SELECT ?o
WHERE {
        <http://marineregions.org/mrgid/12548> mr:isPartOf ?o .
    }
2024-01-30 21:57:26 @SubjPropPathAssetion.py  [DEBUG ] Harvesting the property path and backtracking to the previous depth
2024-01-30 21:57:26 @SubjPropPathAssetion.py  [DEBUG ] Increasing the depth of the property path assertion
2024-01-30 21:57:26 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject
2024-01-30 21:57:26 @SubjPropPathAssetion.py  [DEBUG ] Subject: http://marineregions.org/mrgid/12548
2024-01-30 21:57:26 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject at a given depth
2024-01-30 21:57:26 @SubjPropPathAssetion.py  [DEBUG ] Depth: 3
2024-01-30 21:57:26 @SubjPropPathAssetion.py  [DEBUG ] assertion_path: mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude>
2024-01-30 21:57:26 @syntax_builder.py        [DEBUG ] building sparql query 'trajectory.sparql' with variables={'subject': 'http://marineregions.org/mrgid/12548', 'property_trajectory': 'mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude>', 'prefixes': {'ex': '<https://example.org/whatever/>', 'mr': '<http://marineregions.org/ns/ontology#>'}}
2024-01-30 21:57:26 @SubjPropPathAssetion.py  [DEBUG ] SPARQL query: 


PREFIX ex: <https://example.org/whatever/>

PREFIX mr: <http://marineregions.org/ns/ontology#>


SELECT ?o
WHERE {
        <http://marineregions.org/mrgid/12548> mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude> ?o .
    }
2024-01-30 21:57:27 @connectionpool.py        [DEBUG ] Starting new HTTP connection (1): marineregions.org:80
2024-01-30 21:57:27 @connectionpool.py        [DEBUG ] http://marineregions.org:80 "GET /mrgid/12548 HTTP/1.1" 301 245
2024-01-30 21:57:27 @connectionpool.py        [DEBUG ] Starting new HTTPS connection (1): marineregions.org:443
2024-01-30 21:57:27 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/12548 HTTP/1.1" 302 0
2024-01-30 21:57:28 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/12548.ttl HTTP/1.1" 200 1378
2024-01-30 21:57:28 @WebAccess.py             [INFO  ] content of http://marineregions.org/mrgid/12548 added to the store
2024-01-30 21:57:28 @SubjPropPathAssetion.py  [DEBUG ] Increasing the depth of the property path assertion
2024-01-30 21:57:28 @TravHarvExecuter.py      [DEBUG ] Task: <TravHarvConfigBuilder.TravHarvTask object at 0x0000019313EBB850>
2024-01-30 21:57:28 @TravHarvExecuter.py      [DEBUG ] Info task: {'subject_definition': <TravHarvConfigBuilder.SubjectDefinition object at 0x0000019313E8A790>, 'assert_path_set': <TravHarvConfigBuilder.AssertPathSet object at 0x0000019313EB9110>}
2024-01-30 21:57:28 @TravHarvExecuter.py      [DEBUG ] Defining subjects to assert paths for
2024-01-30 21:57:28 @TravHarvExecuter.py      [DEBUG ] SPARQLSubjectDefinition
2024-01-30 21:57:28 @TravHarvExecuter.py      [DEBUG ] SPARQL query: PREFIX mr: <http://marineregions.org/ns/ontology#> SELECT ?s WHERE {
  [] mr:isPartOf ?s .
  ?s a mr:GeoObject .
}

2024-01-30 21:57:28 @TravHarvExecuter.py      [DEBUG ] Task: <TravHarvConfigBuilder.TravHarvTask object at 0x0000019316D53150>
2024-01-30 21:57:28 @TravHarvExecuter.py      [DEBUG ] Info task: {'subject_definition': <TravHarvConfigBuilder.SubjectDefinition object at 0x0000019316312A90>, 'assert_path_set': <TravHarvConfigBuilder.AssertPathSet object at 0x0000019316D52950>}
2024-01-30 21:57:28 @TravHarvExecuter.py      [DEBUG ] Defining subjects to assert paths for
2024-01-30 21:57:28 @TravHarvExecuter.py      [DEBUG ] SPARQLSubjectDefinition
2024-01-30 21:57:28 @TravHarvExecuter.py      [DEBUG ] SPARQL query: PREFIX mr: <http://marineregions.org/ns/ontology#> SELECT ?s WHERE {
  ?s ?p ?o .
}

2024-01-30 21:57:28 @TravHarvExecuter.py      [DEBUG ] Subject: (rdflib.term.URIRef('http://marineregions.org/mrgid/63523'),)
2024-01-30 21:57:28 @SubjPropPathAssetion.py  [DEBUG ] Subject row: http://marineregions.org/mrgid/63523
2024-01-30 21:57:28 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject
2024-01-30 21:57:28 @SubjPropPathAssetion.py  [DEBUG ] Subject: http://marineregions.org/mrgid/63523
2024-01-30 21:57:28 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject at a given depth
2024-01-30 21:57:28 @SubjPropPathAssetion.py  [DEBUG ] Depth: 3
2024-01-30 21:57:28 @SubjPropPathAssetion.py  [DEBUG ] assertion_path: mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude>
2024-01-30 21:57:28 @syntax_builder.py        [DEBUG ] building sparql query 'trajectory.sparql' with variables={'subject': 'http://marineregions.org/mrgid/63523', 'property_trajectory': 'mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude>', 'prefixes': {'ex': '<https://example.org/whatever/>', 'mr': '<http://marineregions.org/ns/ontology#>'}}
2024-01-30 21:57:28 @SubjPropPathAssetion.py  [DEBUG ] SPARQL query: 


PREFIX ex: <https://example.org/whatever/>

PREFIX mr: <http://marineregions.org/ns/ontology#>


SELECT ?o
WHERE {
        <http://marineregions.org/mrgid/63523> mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude> ?o .
    }
2024-01-30 21:57:29 @connectionpool.py        [DEBUG ] Starting new HTTP connection (1): marineregions.org:80
2024-01-30 21:57:29 @connectionpool.py        [DEBUG ] http://marineregions.org:80 "GET /mrgid/63523 HTTP/1.1" 301 245
2024-01-30 21:57:29 @connectionpool.py        [DEBUG ] Starting new HTTPS connection (1): marineregions.org:443
2024-01-30 21:57:29 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/63523 HTTP/1.1" 302 0
2024-01-30 21:57:29 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/63523.ttl HTTP/1.1" 200 1076
2024-01-30 21:57:29 @WebAccess.py             [INFO  ] content of http://marineregions.org/mrgid/63523 added to the store
2024-01-30 21:57:29 @SubjPropPathAssetion.py  [DEBUG ] Increasing the depth of the property path assertion
2024-01-30 21:57:29 @SubjPropPathAssetion.py  [DEBUG ] Subject row: http://marineregions.org/mrgid/63523
2024-01-30 21:57:29 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject
2024-01-30 21:57:29 @SubjPropPathAssetion.py  [DEBUG ] Subject: http://marineregions.org/mrgid/63523
2024-01-30 21:57:29 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject at a given depth
2024-01-30 21:57:29 @SubjPropPathAssetion.py  [DEBUG ] Depth: 3
2024-01-30 21:57:29 @SubjPropPathAssetion.py  [DEBUG ] assertion_path: mr:isPartOf/<https://schema.org/geo>/<https://schema.org/longitude>
2024-01-30 21:57:29 @syntax_builder.py        [DEBUG ] building sparql query 'trajectory.sparql' with variables={'subject': 'http://marineregions.org/mrgid/63523', 'property_trajectory': 'mr:isPartOf/<https://schema.org/geo>/<https://schema.org/longitude>', 'prefixes': {'ex': '<https://example.org/whatever/>', 'mr': '<http://marineregions.org/ns/ontology#>'}}
2024-01-30 21:57:29 @SubjPropPathAssetion.py  [DEBUG ] SPARQL query: 


PREFIX ex: <https://example.org/whatever/>

PREFIX mr: <http://marineregions.org/ns/ontology#>


SELECT ?o
WHERE {
        <http://marineregions.org/mrgid/63523> mr:isPartOf/<https://schema.org/geo>/<https://schema.org/longitude> ?o .
    }
2024-01-30 21:57:30 @connectionpool.py        [DEBUG ] Starting new HTTP connection (1): marineregions.org:80
2024-01-30 21:57:30 @connectionpool.py        [DEBUG ] http://marineregions.org:80 "GET /mrgid/63523 HTTP/1.1" 301 245
2024-01-30 21:57:30 @connectionpool.py        [DEBUG ] Starting new HTTPS connection (1): marineregions.org:443
2024-01-30 21:57:30 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/63523 HTTP/1.1" 302 0
2024-01-30 21:57:30 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/63523.ttl HTTP/1.1" 200 1076
2024-01-30 21:57:30 @WebAccess.py             [INFO  ] content of http://marineregions.org/mrgid/63523 added to the store
2024-01-30 21:57:30 @SubjPropPathAssetion.py  [DEBUG ] Increasing the depth of the property path assertion
2024-01-30 21:57:30 @TravHarvExecuter.py      [DEBUG ] Subject: (rdflib.term.URIRef('http://marineregions.org/mrgid/2540'),)
2024-01-30 21:57:30 @SubjPropPathAssetion.py  [DEBUG ] Subject row: http://marineregions.org/mrgid/2540
2024-01-30 21:57:30 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject
2024-01-30 21:57:30 @SubjPropPathAssetion.py  [DEBUG ] Subject: http://marineregions.org/mrgid/2540
2024-01-30 21:57:30 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject at a given depth
2024-01-30 21:57:30 @SubjPropPathAssetion.py  [DEBUG ] Depth: 3
2024-01-30 21:57:30 @SubjPropPathAssetion.py  [DEBUG ] assertion_path: mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude>
2024-01-30 21:57:30 @syntax_builder.py        [DEBUG ] building sparql query 'trajectory.sparql' with variables={'subject': 'http://marineregions.org/mrgid/2540', 'property_trajectory': 'mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude>', 'prefixes': {'ex': '<https://example.org/whatever/>', 'mr': '<http://marineregions.org/ns/ontology#>'}}
2024-01-30 21:57:30 @SubjPropPathAssetion.py  [DEBUG ] SPARQL query: 


PREFIX ex: <https://example.org/whatever/>

PREFIX mr: <http://marineregions.org/ns/ontology#>


SELECT ?o
WHERE {
        <http://marineregions.org/mrgid/2540> mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude> ?o .
    }
2024-01-30 21:57:31 @connectionpool.py        [DEBUG ] Starting new HTTP connection (1): marineregions.org:80
2024-01-30 21:57:31 @connectionpool.py        [DEBUG ] http://marineregions.org:80 "GET /mrgid/2540 HTTP/1.1" 301 244
2024-01-30 21:57:31 @connectionpool.py        [DEBUG ] Starting new HTTPS connection (1): marineregions.org:443
2024-01-30 21:57:31 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/2540 HTTP/1.1" 302 0
2024-01-30 21:57:31 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/2540.ttl HTTP/1.1" 200 1039
2024-01-30 21:57:31 @WebAccess.py             [INFO  ] content of http://marineregions.org/mrgid/2540 added to the store
2024-01-30 21:57:31 @SubjPropPathAssetion.py  [DEBUG ] Increasing the depth of the property path assertion
2024-01-30 21:57:31 @SubjPropPathAssetion.py  [DEBUG ] Subject row: http://marineregions.org/mrgid/2540
2024-01-30 21:57:31 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject
2024-01-30 21:57:31 @SubjPropPathAssetion.py  [DEBUG ] Subject: http://marineregions.org/mrgid/2540
2024-01-30 21:57:31 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject at a given depth
2024-01-30 21:57:31 @SubjPropPathAssetion.py  [DEBUG ] Depth: 3
2024-01-30 21:57:31 @SubjPropPathAssetion.py  [DEBUG ] assertion_path: mr:isPartOf/<https://schema.org/geo>/<https://schema.org/longitude>
2024-01-30 21:57:31 @syntax_builder.py        [DEBUG ] building sparql query 'trajectory.sparql' with variables={'subject': 'http://marineregions.org/mrgid/2540', 'property_trajectory': 'mr:isPartOf/<https://schema.org/geo>/<https://schema.org/longitude>', 'prefixes': {'ex': '<https://example.org/whatever/>', 'mr': '<http://marineregions.org/ns/ontology#>'}}
2024-01-30 21:57:31 @SubjPropPathAssetion.py  [DEBUG ] SPARQL query: 


PREFIX ex: <https://example.org/whatever/>

PREFIX mr: <http://marineregions.org/ns/ontology#>


SELECT ?o
WHERE {
        <http://marineregions.org/mrgid/2540> mr:isPartOf/<https://schema.org/geo>/<https://schema.org/longitude> ?o .
    }
2024-01-30 21:57:32 @connectionpool.py        [DEBUG ] Starting new HTTP connection (1): marineregions.org:80
2024-01-30 21:57:32 @connectionpool.py        [DEBUG ] http://marineregions.org:80 "GET /mrgid/2540 HTTP/1.1" 301 244
2024-01-30 21:57:32 @connectionpool.py        [DEBUG ] Starting new HTTPS connection (1): marineregions.org:443
2024-01-30 21:57:32 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/2540 HTTP/1.1" 302 0
2024-01-30 21:57:32 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/2540.ttl HTTP/1.1" 200 1039
2024-01-30 21:57:32 @WebAccess.py             [INFO  ] content of http://marineregions.org/mrgid/2540 added to the store
2024-01-30 21:57:32 @SubjPropPathAssetion.py  [DEBUG ] Increasing the depth of the property path assertion
2024-01-30 21:57:32 @TravHarvExecuter.py      [DEBUG ] Subject: (rdflib.term.URIRef('http://marineregions.org/mrgid/65'),)
2024-01-30 21:57:32 @SubjPropPathAssetion.py  [DEBUG ] Subject row: http://marineregions.org/mrgid/65
2024-01-30 21:57:32 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject
2024-01-30 21:57:32 @SubjPropPathAssetion.py  [DEBUG ] Subject: http://marineregions.org/mrgid/65
2024-01-30 21:57:32 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject at a given depth
2024-01-30 21:57:32 @SubjPropPathAssetion.py  [DEBUG ] Depth: 3
2024-01-30 21:57:32 @SubjPropPathAssetion.py  [DEBUG ] assertion_path: mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude>
2024-01-30 21:57:32 @syntax_builder.py        [DEBUG ] building sparql query 'trajectory.sparql' with variables={'subject': 'http://marineregions.org/mrgid/65', 'property_trajectory': 'mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude>', 'prefixes': {'ex': '<https://example.org/whatever/>', 'mr': '<http://marineregions.org/ns/ontology#>'}}
2024-01-30 21:57:32 @SubjPropPathAssetion.py  [DEBUG ] SPARQL query: 


PREFIX ex: <https://example.org/whatever/>

PREFIX mr: <http://marineregions.org/ns/ontology#>


SELECT ?o
WHERE {
        <http://marineregions.org/mrgid/65> mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude> ?o .
    }
2024-01-30 21:57:33 @connectionpool.py        [DEBUG ] Starting new HTTP connection (1): marineregions.org:80
2024-01-30 21:57:33 @connectionpool.py        [DEBUG ] http://marineregions.org:80 "GET /mrgid/65 HTTP/1.1" 301 242
2024-01-30 21:57:33 @connectionpool.py        [DEBUG ] Starting new HTTPS connection (1): marineregions.org:443
2024-01-30 21:57:33 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/65 HTTP/1.1" 302 0
2024-01-30 21:57:33 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/65.ttl HTTP/1.1" 200 2968
2024-01-30 21:57:33 @WebAccess.py             [INFO  ] content of http://marineregions.org/mrgid/65 added to the store
2024-01-30 21:57:33 @SubjPropPathAssetion.py  [DEBUG ] Increasing the depth of the property path assertion
2024-01-30 21:57:33 @SubjPropPathAssetion.py  [DEBUG ] Subject row: http://marineregions.org/mrgid/65
2024-01-30 21:57:33 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject
2024-01-30 21:57:33 @SubjPropPathAssetion.py  [DEBUG ] Subject: http://marineregions.org/mrgid/65
2024-01-30 21:57:33 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject at a given depth
2024-01-30 21:57:33 @SubjPropPathAssetion.py  [DEBUG ] Depth: 3
2024-01-30 21:57:33 @SubjPropPathAssetion.py  [DEBUG ] assertion_path: mr:isPartOf/<https://schema.org/geo>/<https://schema.org/longitude>
2024-01-30 21:57:33 @syntax_builder.py        [DEBUG ] building sparql query 'trajectory.sparql' with variables={'subject': 'http://marineregions.org/mrgid/65', 'property_trajectory': 'mr:isPartOf/<https://schema.org/geo>/<https://schema.org/longitude>', 'prefixes': {'ex': '<https://example.org/whatever/>', 'mr': '<http://marineregions.org/ns/ontology#>'}}
2024-01-30 21:57:33 @SubjPropPathAssetion.py  [DEBUG ] SPARQL query: 


PREFIX ex: <https://example.org/whatever/>

PREFIX mr: <http://marineregions.org/ns/ontology#>


SELECT ?o
WHERE {
        <http://marineregions.org/mrgid/65> mr:isPartOf/<https://schema.org/geo>/<https://schema.org/longitude> ?o .
    }
2024-01-30 21:57:34 @connectionpool.py        [DEBUG ] Starting new HTTP connection (1): marineregions.org:80
2024-01-30 21:57:34 @connectionpool.py        [DEBUG ] http://marineregions.org:80 "GET /mrgid/65 HTTP/1.1" 301 242
2024-01-30 21:57:34 @connectionpool.py        [DEBUG ] Starting new HTTPS connection (1): marineregions.org:443
2024-01-30 21:57:35 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/65 HTTP/1.1" 302 0
2024-01-30 21:57:35 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/65.ttl HTTP/1.1" 200 2968
2024-01-30 21:57:35 @WebAccess.py             [INFO  ] content of http://marineregions.org/mrgid/65 added to the store
2024-01-30 21:57:35 @SubjPropPathAssetion.py  [DEBUG ] Increasing the depth of the property path assertion
2024-01-30 21:57:35 @TravHarvExecuter.py      [DEBUG ] Subject: (rdflib.term.URIRef('http://marineregions.org/mrgid/63523'),)
2024-01-30 21:57:35 @SubjPropPathAssetion.py  [DEBUG ] Subject row: http://marineregions.org/mrgid/63523
2024-01-30 21:57:35 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject
2024-01-30 21:57:35 @SubjPropPathAssetion.py  [DEBUG ] Subject: http://marineregions.org/mrgid/63523
2024-01-30 21:57:35 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject at a given depth
2024-01-30 21:57:35 @SubjPropPathAssetion.py  [DEBUG ] Depth: 3
2024-01-30 21:57:35 @SubjPropPathAssetion.py  [DEBUG ] assertion_path: mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude>
2024-01-30 21:57:35 @syntax_builder.py        [DEBUG ] building sparql query 'trajectory.sparql' with variables={'subject': 'http://marineregions.org/mrgid/63523', 'property_trajectory': 'mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude>', 'prefixes': {'ex': '<https://example.org/whatever/>', 'mr': '<http://marineregions.org/ns/ontology#>'}}
2024-01-30 21:57:35 @SubjPropPathAssetion.py  [DEBUG ] SPARQL query: 


PREFIX ex: <https://example.org/whatever/>

PREFIX mr: <http://marineregions.org/ns/ontology#>


SELECT ?o
WHERE {
        <http://marineregions.org/mrgid/63523> mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude> ?o .
    }
2024-01-30 21:57:36 @connectionpool.py        [DEBUG ] Starting new HTTP connection (1): marineregions.org:80
2024-01-30 21:57:36 @connectionpool.py        [DEBUG ] http://marineregions.org:80 "GET /mrgid/63523 HTTP/1.1" 301 245
2024-01-30 21:57:36 @connectionpool.py        [DEBUG ] Starting new HTTPS connection (1): marineregions.org:443
2024-01-30 21:57:36 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/63523 HTTP/1.1" 302 0
2024-01-30 21:57:36 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/63523.ttl HTTP/1.1" 200 1076
2024-01-30 21:57:36 @WebAccess.py             [INFO  ] content of http://marineregions.org/mrgid/63523 added to the store
2024-01-30 21:57:36 @SubjPropPathAssetion.py  [DEBUG ] Increasing the depth of the property path assertion
2024-01-30 21:57:36 @SubjPropPathAssetion.py  [DEBUG ] Subject row: http://marineregions.org/mrgid/63523
2024-01-30 21:57:36 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject
2024-01-30 21:57:36 @SubjPropPathAssetion.py  [DEBUG ] Subject: http://marineregions.org/mrgid/63523
2024-01-30 21:57:36 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject at a given depth
2024-01-30 21:57:36 @SubjPropPathAssetion.py  [DEBUG ] Depth: 3
2024-01-30 21:57:36 @SubjPropPathAssetion.py  [DEBUG ] assertion_path: mr:isPartOf/<https://schema.org/geo>/<https://schema.org/longitude>
2024-01-30 21:57:36 @syntax_builder.py        [DEBUG ] building sparql query 'trajectory.sparql' with variables={'subject': 'http://marineregions.org/mrgid/63523', 'property_trajectory': 'mr:isPartOf/<https://schema.org/geo>/<https://schema.org/longitude>', 'prefixes': {'ex': '<https://example.org/whatever/>', 'mr': '<http://marineregions.org/ns/ontology#>'}}
2024-01-30 21:57:36 @SubjPropPathAssetion.py  [DEBUG ] SPARQL query: 


PREFIX ex: <https://example.org/whatever/>

PREFIX mr: <http://marineregions.org/ns/ontology#>


SELECT ?o
WHERE {
        <http://marineregions.org/mrgid/63523> mr:isPartOf/<https://schema.org/geo>/<https://schema.org/longitude> ?o .
    }
2024-01-30 21:57:37 @connectionpool.py        [DEBUG ] Starting new HTTP connection (1): marineregions.org:80
2024-01-30 21:57:37 @connectionpool.py        [DEBUG ] http://marineregions.org:80 "GET /mrgid/63523 HTTP/1.1" 301 245
2024-01-30 21:57:37 @connectionpool.py        [DEBUG ] Starting new HTTPS connection (1): marineregions.org:443
2024-01-30 21:57:37 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/63523 HTTP/1.1" 302 0
2024-01-30 21:57:37 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/63523.ttl HTTP/1.1" 200 1076
2024-01-30 21:57:37 @WebAccess.py             [INFO  ] content of http://marineregions.org/mrgid/63523 added to the store
2024-01-30 21:57:37 @SubjPropPathAssetion.py  [DEBUG ] Increasing the depth of the property path assertion
2024-01-30 21:57:37 @TravHarvExecuter.py      [DEBUG ] Subject: (rdflib.term.URIRef('https://www.ir-ilico.fr/'),)
2024-01-30 21:57:37 @SubjPropPathAssetion.py  [DEBUG ] Subject row: https://www.ir-ilico.fr/
2024-01-30 21:57:37 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject
2024-01-30 21:57:37 @SubjPropPathAssetion.py  [DEBUG ] Subject: https://www.ir-ilico.fr/
2024-01-30 21:57:37 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject at a given depth
2024-01-30 21:57:37 @SubjPropPathAssetion.py  [DEBUG ] Depth: 3
2024-01-30 21:57:37 @SubjPropPathAssetion.py  [DEBUG ] assertion_path: mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude>
2024-01-30 21:57:37 @syntax_builder.py        [DEBUG ] building sparql query 'trajectory.sparql' with variables={'subject': 'https://www.ir-ilico.fr/', 'property_trajectory': 'mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude>', 'prefixes': {'ex': '<https://example.org/whatever/>', 'mr': '<http://marineregions.org/ns/ontology#>'}}
2024-01-30 21:57:37 @SubjPropPathAssetion.py  [DEBUG ] SPARQL query: 


PREFIX ex: <https://example.org/whatever/>

PREFIX mr: <http://marineregions.org/ns/ontology#>


SELECT ?o
WHERE {
        <https://www.ir-ilico.fr/> mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude> ?o .
    }
2024-01-30 21:57:38 @connectionpool.py        [DEBUG ] Starting new HTTPS connection (1): www.ir-ilico.fr:443
2024-01-30 21:57:38 @connectionpool.py        [DEBUG ] https://www.ir-ilico.fr:443 "GET / HTTP/1.1" 302 0
2024-01-30 21:57:39 @connectionpool.py        [DEBUG ] https://www.ir-ilico.fr:443 "GET /?PagePrincipale HTTP/1.1" 200 21854
2024-01-30 21:57:39 @connectionpool.py        [DEBUG ] Starting new HTTPS connection (1): www.ir-ilico.fr:443
2024-01-30 21:57:39 @connectionpool.py        [DEBUG ] https://www.ir-ilico.fr:443 "GET / HTTP/1.1" 302 0
2024-01-30 21:57:40 @connectionpool.py        [DEBUG ] https://www.ir-ilico.fr:443 "GET /?PagePrincipale HTTP/1.1" 200 21854
2024-01-30 21:57:40 @WebAccess.py             [INFO  ] content of https://www.ir-ilico.fr/ is html
2024-01-30 21:57:40 @WebAccess.py             [INFO  ] found 0 links in the html file
2024-01-30 21:57:40 @SubjPropPathAssetion.py  [DEBUG ] Increasing the depth of the property path assertion
2024-01-30 21:57:40 @SubjPropPathAssetion.py  [DEBUG ] Subject row: https://www.ir-ilico.fr/
2024-01-30 21:57:40 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject
2024-01-30 21:57:40 @SubjPropPathAssetion.py  [DEBUG ] Subject: https://www.ir-ilico.fr/
2024-01-30 21:57:40 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject at a given depth
2024-01-30 21:57:40 @SubjPropPathAssetion.py  [DEBUG ] Depth: 3
2024-01-30 21:57:40 @SubjPropPathAssetion.py  [DEBUG ] assertion_path: mr:isPartOf/<https://schema.org/geo>/<https://schema.org/longitude>
2024-01-30 21:57:40 @syntax_builder.py        [DEBUG ] building sparql query 'trajectory.sparql' with variables={'subject': 'https://www.ir-ilico.fr/', 'property_trajectory': 'mr:isPartOf/<https://schema.org/geo>/<https://schema.org/longitude>', 'prefixes': {'ex': '<https://example.org/whatever/>', 'mr': '<http://marineregions.org/ns/ontology#>'}}
2024-01-30 21:57:40 @SubjPropPathAssetion.py  [DEBUG ] SPARQL query: 


PREFIX ex: <https://example.org/whatever/>

PREFIX mr: <http://marineregions.org/ns/ontology#>


SELECT ?o
WHERE {
        <https://www.ir-ilico.fr/> mr:isPartOf/<https://schema.org/geo>/<https://schema.org/longitude> ?o .
    }
2024-01-30 21:57:41 @connectionpool.py        [DEBUG ] Starting new HTTPS connection (1): www.ir-ilico.fr:443
2024-01-30 21:57:41 @connectionpool.py        [DEBUG ] https://www.ir-ilico.fr:443 "GET / HTTP/1.1" 302 0
2024-01-30 21:57:41 @connectionpool.py        [DEBUG ] https://www.ir-ilico.fr:443 "GET /?PagePrincipale HTTP/1.1" 200 21854
2024-01-30 21:57:41 @connectionpool.py        [DEBUG ] Starting new HTTPS connection (1): www.ir-ilico.fr:443
2024-01-30 21:57:41 @connectionpool.py        [DEBUG ] https://www.ir-ilico.fr:443 "GET / HTTP/1.1" 302 0
2024-01-30 21:57:42 @connectionpool.py        [DEBUG ] https://www.ir-ilico.fr:443 "GET /?PagePrincipale HTTP/1.1" 200 21854
2024-01-30 21:57:42 @WebAccess.py             [INFO  ] content of https://www.ir-ilico.fr/ is html
2024-01-30 21:57:42 @WebAccess.py             [INFO  ] found 0 links in the html file
2024-01-30 21:57:42 @SubjPropPathAssetion.py  [DEBUG ] Increasing the depth of the property path assertion
2024-01-30 21:57:42 @TravHarvExecuter.py      [DEBUG ] Subject: (rdflib.term.URIRef('http://marineregions.org/mrgid/63523'),)
2024-01-30 21:57:42 @SubjPropPathAssetion.py  [DEBUG ] Subject row: http://marineregions.org/mrgid/63523
2024-01-30 21:57:42 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject
2024-01-30 21:57:42 @SubjPropPathAssetion.py  [DEBUG ] Subject: http://marineregions.org/mrgid/63523
2024-01-30 21:57:42 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject at a given depth
2024-01-30 21:57:42 @SubjPropPathAssetion.py  [DEBUG ] Depth: 3
2024-01-30 21:57:42 @SubjPropPathAssetion.py  [DEBUG ] assertion_path: mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude>
2024-01-30 21:57:42 @syntax_builder.py        [DEBUG ] building sparql query 'trajectory.sparql' with variables={'subject': 'http://marineregions.org/mrgid/63523', 'property_trajectory': 'mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude>', 'prefixes': {'ex': '<https://example.org/whatever/>', 'mr': '<http://marineregions.org/ns/ontology#>'}}
2024-01-30 21:57:42 @SubjPropPathAssetion.py  [DEBUG ] SPARQL query: 


PREFIX ex: <https://example.org/whatever/>

PREFIX mr: <http://marineregions.org/ns/ontology#>


SELECT ?o
WHERE {
        <http://marineregions.org/mrgid/63523> mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude> ?o .
    }
2024-01-30 21:57:43 @connectionpool.py        [DEBUG ] Starting new HTTP connection (1): marineregions.org:80
2024-01-30 21:57:43 @connectionpool.py        [DEBUG ] http://marineregions.org:80 "GET /mrgid/63523 HTTP/1.1" 301 245
2024-01-30 21:57:43 @connectionpool.py        [DEBUG ] Starting new HTTPS connection (1): marineregions.org:443
2024-01-30 21:57:43 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/63523 HTTP/1.1" 302 0
2024-01-30 21:57:43 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/63523.ttl HTTP/1.1" 200 1076
2024-01-30 21:57:43 @WebAccess.py             [INFO  ] content of http://marineregions.org/mrgid/63523 added to the store
2024-01-30 21:57:43 @SubjPropPathAssetion.py  [DEBUG ] Increasing the depth of the property path assertion
2024-01-30 21:57:43 @SubjPropPathAssetion.py  [DEBUG ] Subject row: http://marineregions.org/mrgid/63523
2024-01-30 21:57:43 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject
2024-01-30 21:57:43 @SubjPropPathAssetion.py  [DEBUG ] Subject: http://marineregions.org/mrgid/63523
2024-01-30 21:57:43 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject at a given depth
2024-01-30 21:57:43 @SubjPropPathAssetion.py  [DEBUG ] Depth: 3
2024-01-30 21:57:43 @SubjPropPathAssetion.py  [DEBUG ] assertion_path: mr:isPartOf/<https://schema.org/geo>/<https://schema.org/longitude>
2024-01-30 21:57:43 @syntax_builder.py        [DEBUG ] building sparql query 'trajectory.sparql' with variables={'subject': 'http://marineregions.org/mrgid/63523', 'property_trajectory': 'mr:isPartOf/<https://schema.org/geo>/<https://schema.org/longitude>', 'prefixes': {'ex': '<https://example.org/whatever/>', 'mr': '<http://marineregions.org/ns/ontology#>'}}
2024-01-30 21:57:43 @SubjPropPathAssetion.py  [DEBUG ] SPARQL query: 


PREFIX ex: <https://example.org/whatever/>

PREFIX mr: <http://marineregions.org/ns/ontology#>


SELECT ?o
WHERE {
        <http://marineregions.org/mrgid/63523> mr:isPartOf/<https://schema.org/geo>/<https://schema.org/longitude> ?o .
    }
2024-01-30 21:57:44 @connectionpool.py        [DEBUG ] Starting new HTTP connection (1): marineregions.org:80
2024-01-30 21:57:44 @connectionpool.py        [DEBUG ] http://marineregions.org:80 "GET /mrgid/63523 HTTP/1.1" 301 245
2024-01-30 21:57:44 @connectionpool.py        [DEBUG ] Starting new HTTPS connection (1): marineregions.org:443
2024-01-30 21:57:44 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/63523 HTTP/1.1" 302 0
2024-01-30 21:57:44 @connectionpool.py        [DEBUG ] https://marineregions.org:443 "GET /mrgid/63523.ttl HTTP/1.1" 200 1076
2024-01-30 21:57:44 @WebAccess.py             [INFO  ] content of http://marineregions.org/mrgid/63523 added to the store
2024-01-30 21:57:44 @SubjPropPathAssetion.py  [DEBUG ] Increasing the depth of the property path assertion
2024-01-30 21:57:44 @TravHarvExecuter.py      [DEBUG ] Subject: (rdflib.term.BNode('n0621dbb53d764a8a99a6445497ab6e9bb1'),)
2024-01-30 21:57:44 @SubjPropPathAssetion.py  [DEBUG ] Subject row: n0621dbb53d764a8a99a6445497ab6e9bb1
2024-01-30 21:57:44 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject
2024-01-30 21:57:44 @SubjPropPathAssetion.py  [DEBUG ] Subject: n0621dbb53d764a8a99a6445497ab6e9bb1
2024-01-30 21:57:44 @SubjPropPathAssetion.py  [DEBUG ] Asserting a property path for a given subject at a given depth
2024-01-30 21:57:44 @SubjPropPathAssetion.py  [DEBUG ] Depth: 3
2024-01-30 21:57:44 @SubjPropPathAssetion.py  [DEBUG ] assertion_path: mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude>
2024-01-30 21:57:44 @syntax_builder.py        [DEBUG ] building sparql query 'trajectory.sparql' with variables={'subject': 'n0621dbb53d764a8a99a6445497ab6e9bb1', 'property_trajectory': 'mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude>', 'prefixes': {'ex': '<https://example.org/whatever/>', 'mr': '<http://marineregions.org/ns/ontology#>'}}
2024-01-30 21:57:44 @SubjPropPathAssetion.py  [DEBUG ] SPARQL query: 


PREFIX ex: <https://example.org/whatever/>

PREFIX mr: <http://marineregions.org/ns/ontology#>


SELECT ?o
WHERE {
        <n0621dbb53d764a8a99a6445497ab6e9bb1> mr:isPartOf/<https://schema.org/geo>/<https://schema.org/latitude> ?o .
    }
